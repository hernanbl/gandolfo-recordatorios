#!/usr/bin/env python3
"""
Script para verificar la configuraci√≥n de Twilio y validar el n√∫mero de WhatsApp.
"""

import sys
import os

# A√±adir el directorio ra√≠z al path para poder importar m√≥dulos del proyecto
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

def main():
    try:
        from config import TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, TWILIO_WHATSAPP_NUMBER
        from twilio.rest import Client
        
        print("üîß VERIFICACI√ìN DE CONFIGURACI√ìN DE TWILIO")
        print("=" * 50)
        
        # Verificar variables de entorno
        print("üìã Variables de entorno:")
        print(f"  TWILIO_ACCOUNT_SID: {'‚úÖ Configurado' if TWILIO_ACCOUNT_SID else '‚ùå Falta'}")
        print(f"  TWILIO_AUTH_TOKEN: {'‚úÖ Configurado' if TWILIO_AUTH_TOKEN else '‚ùå Falta'}")
        print(f"  TWILIO_WHATSAPP_NUMBER: {'‚úÖ Configurado' if TWILIO_WHATSAPP_NUMBER else '‚ùå Falta'}")
        
        if TWILIO_WHATSAPP_NUMBER:
            print(f"  N√∫mero configurado: {TWILIO_WHATSAPP_NUMBER}")
        
        print()
        
        if not all([TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, TWILIO_WHATSAPP_NUMBER]):
            print("‚ùå Error: Faltan variables de entorno requeridas para Twilio")
            return False
        
        # Verificar conexi√≥n con Twilio
        print("üîó Verificando conexi√≥n con Twilio...")
        try:
            client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
            
            # Verificar que la cuenta sea v√°lida
            account = client.api.accounts(TWILIO_ACCOUNT_SID).fetch()
            print(f"‚úÖ Conexi√≥n exitosa con Twilio")
            print(f"  Cuenta: {account.friendly_name}")
            print(f"  Status: {account.status}")
            
            # Verificar n√∫meros de WhatsApp disponibles
            print("\nüì± Verificando n√∫meros de WhatsApp:")
            incoming_phone_numbers = client.incoming_phone_numbers.list()
            whatsapp_numbers = []
            
            for number in incoming_phone_numbers:
                capabilities = number.capabilities
                if capabilities and capabilities.get('sms'):  # WhatsApp usa la capacidad SMS
                    whatsapp_numbers.append(number.phone_number)
                    print(f"  üìû N√∫mero disponible: {number.phone_number}")
            
            if not whatsapp_numbers:
                print("  ‚ö†Ô∏è  No se encontraron n√∫meros con capacidad WhatsApp")
            
            # Verificar si el n√∫mero configurado est√° en la lista
            configured_number = TWILIO_WHATSAPP_NUMBER.replace('whatsapp:', '').replace('+', '')
            if whatsapp_numbers:
                for available_number in whatsapp_numbers:
                    if configured_number in available_number.replace('+', ''):
                        print(f"‚úÖ El n√∫mero configurado {TWILIO_WHATSAPP_NUMBER} est√° disponible")
                        return True
                        
                print(f"‚ùå El n√∫mero configurado {TWILIO_WHATSAPP_NUMBER} NO est√° en los n√∫meros disponibles")
                print("   N√∫meros disponibles:")
                for num in whatsapp_numbers:
                    print(f"     - {num}")
                return False
            
        except Exception as e:
            print(f"‚ùå Error conectando con Twilio: {str(e)}")
            return False
            
    except ImportError as e:
        print(f"‚ùå Error importando m√≥dulos: {str(e)}")
        print("   Aseg√∫rate de que las dependencias est√©n instaladas: pip install twilio")
        return False
    except Exception as e:
        print(f"‚ùå Error inesperado: {str(e)}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
