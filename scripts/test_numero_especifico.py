#!/usr/bin/env python3
"""
Script para probar espec√≠ficamente el n√∫mero de Twilio +18059093442
y diagnosticar por qu√© no funciona para WhatsApp.
"""

import sys
import os

# A√±adir el directorio ra√≠z al path para poder importar m√≥dulos del proyecto
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

def test_twilio_number():
    print("üîç DIAGN√ìSTICO ESPEC√çFICO PARA N√öMERO +18059093442")
    print("=" * 60)
    
    try:
        from config import TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, TWILIO_WHATSAPP_NUMBER
        from twilio.rest import Client
        
        print(f"üìû N√∫mero configurado: {TWILIO_WHATSAPP_NUMBER}")
        print(f"üìû N√∫mero esperado: +18059093442")
        
        if TWILIO_WHATSAPP_NUMBER != "+18059093442":
            print(f"‚ö†Ô∏è  DISCREPANCIA ENCONTRADA:")
            print(f"   Variable de entorno: {TWILIO_WHATSAPP_NUMBER}")
            print(f"   N√∫mero en consola: +18059093442")
        
        if not all([TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, TWILIO_WHATSAPP_NUMBER]):
            print("‚ùå Faltan credenciales de Twilio")
            return False
        
        client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
        
        # Verificar cuenta
        print("\nüîó Verificando cuenta de Twilio...")
        account = client.api.accounts(TWILIO_ACCOUNT_SID).fetch()
        print(f"‚úÖ Cuenta: {account.friendly_name}")
        print(f"   Status: {account.status}")
        
        # Listar TODOS los n√∫meros
        print("\nüì± Todos los n√∫meros en la cuenta:")
        numbers = client.incoming_phone_numbers.list()
        for number in numbers:
            print(f"   üìû {number.phone_number}")
            print(f"      SMS: {number.capabilities.get('sms', False)}")
            print(f"      Voice: {number.capabilities.get('voice', False)}")
            print(f"      MMS: {number.capabilities.get('mms', False)}")
            print(f"      Friendly Name: {number.friendly_name}")
            print()
        
        # Verificar espec√≠ficamente el n√∫mero +18059093442
        target_number = "+18059093442"
        found_number = None
        
        for number in numbers:
            if number.phone_number == target_number:
                found_number = number
                break
        
        if found_number:
            print(f"‚úÖ N√öMERO ENCONTRADO: {target_number}")
            print(f"   SMS habilitado: {found_number.capabilities.get('sms', False)}")
            print(f"   Status: {found_number.status}")
        else:
            print(f"‚ùå N√öMERO NO ENCONTRADO: {target_number}")
            print("   El n√∫mero no est√° en tu cuenta de Twilio")
            return False
        
        # Verificar configuraci√≥n de WhatsApp espec√≠ficamente
        print(f"\nüì± Verificando configuraci√≥n de WhatsApp...")
        
        # Intentar obtener informaci√≥n del sandbox de WhatsApp
        try:
            # Verificar si hay configuraci√≥n de WhatsApp sandbox
            sandbox_participants = client.messages.list(
                from_=f"whatsapp:{target_number}",
                limit=1
            )
            print(f"‚úÖ El n√∫mero puede enviar mensajes de WhatsApp")
        except Exception as whatsapp_error:
            print(f"‚ö†Ô∏è  Error verificando WhatsApp: {str(whatsapp_error)}")
        
        # Probar env√≠o de prueba a un n√∫mero sandbox
        print(f"\nüß™ PRUEBA DE ENV√çO:")
        print(f"   Desde: whatsapp:{target_number}")
        print(f"   Hacia: whatsapp:+5491166686255 (n√∫mero de prueba)")
        
        try:
            # Hacer una prueba sin enviar realmente
            message_data = {
                'body': 'Prueba de conectividad - este mensaje NO se enviar√°',
                'from_': f'whatsapp:{target_number}',
                'to': 'whatsapp:+5491166686255'
            }
            print(f"   Datos del mensaje: {message_data}")
            
            # Solo simular, no enviar realmente
            print("   ‚ÑπÔ∏è  Simulaci√≥n completada (no se envi√≥ mensaje real)")
            
        except Exception as test_error:
            print(f"   ‚ùå Error en prueba: {str(test_error)}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error en diagn√≥stico: {str(e)}")
        import traceback
        print(f"Traceback: {traceback.format_exc()}")
        return False

def check_whatsapp_business_status():
    """Verificar el estado de WhatsApp Business"""
    print(f"\nüìã VERIFICACI√ìN DE WHATSAPP BUSINESS")
    print("=" * 40)
    
    try:
        from config import TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN
        from twilio.rest import Client
        
        client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
        
        # Intentar acceder a la API de WhatsApp Business
        try:
            # Esta llamada puede fallar si WhatsApp Business no est√° configurado
            conversations = client.conversations.v1.conversations.list(limit=1)
            print("‚úÖ WhatsApp Business API accesible")
        except Exception as wb_error:
            print(f"‚ö†Ô∏è  WhatsApp Business API: {str(wb_error)}")
            
        return True
        
    except Exception as e:
        print(f"‚ùå Error verificando WhatsApp Business: {str(e)}")
        return False

def main():
    success = test_twilio_number()
    check_whatsapp_business_status()
    
    print(f"\n" + "=" * 60)
    print("üîß RECOMENDACIONES:")
    print("=" * 60)
    
    print("""
1. üì± Verificar en Twilio Console:
   - Ve a Phone Numbers ‚Üí Manage ‚Üí Incoming phone numbers
   - Busca +18059093442
   - Verifica que est√© habilitado para SMS
   - Verifica que tenga configuraci√≥n de WhatsApp
   
2. üîó Verificar WhatsApp Business:
   - Ve a Messaging ‚Üí WhatsApp ‚Üí Senders
   - Verifica que +18059093442 est√© listado
   - Verifica el status (debe ser "approved" o "pending")
   
3. üß™ Probar en WhatsApp Sandbox:
   - Ve a Messaging ‚Üí Try it out ‚Üí Send a WhatsApp message
   - Usa +18059093442 como n√∫mero de origen
   - Env√≠a un mensaje de prueba
   
4. üìã Verificar variables de entorno en Render:
   - TWILIO_WHATSAPP_NUMBER debe ser exactamente: +18059093442
   - Sin prefijo "whatsapp:" en la variable de entorno
""")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
